/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package fr.ufrsciencestech.panier.view;

import fr.ufrsciencestech.panier.controler.Controleur;
import fr.ufrsciencestech.panier.model.FruitSimple;
import fr.ufrsciencestech.panier.model.Panier;
import fr.ufrsciencestech.panier.model.OrigineProduit;
import fr.ufrsciencestech.panier.model.TypeFruitSimple;
import java.util.Observable;

import javax.swing.*;

/**
 *
 * @author pt454976
 */
public class VueAjoutFruit extends javax.swing.JFrame implements VueG{
    private Panier mPanier;
    private VuePanier mVP;
    private Controleur mControleur;
    private int quantite;

    /**
     * Creates new form VueAjoutFruit
     */
    public VueAjoutFruit(Panier panier, VuePanier vuePanier, Controleur controleur) {
        initComponents();
        this.mPanier = panier;
        this.mVP = vuePanier;
        this.mControleur = controleur;
        this.jSpinnerQteFruitSimple.setModel(new SpinnerNumberModel(0, 0, mPanier.quantiteRestante(), 1));
        this.quantite = 0;
                
        initDatas();
    }
    
    void initDatas(){
        DefaultComboBoxModel<OrigineProduit> modelOrigine = new DefaultComboBoxModel<>(OrigineProduit.values());
        this.jComboBoxOrigineFruitSimple.setModel((ComboBoxModel) modelOrigine);
        
        DefaultComboBoxModel<TypeFruitSimple> modelType = new DefaultComboBoxModel<>(TypeFruitSimple.values());
        this.jComboBoxTypeFruitSimple.setModel((ComboBoxModel) modelType);
    }
    
    boolean jTextFieldPrixValide(){
        try{
            String text = this.jTextFieldPrixFruitSimple.getText();
            double prix = Double.parseDouble(text);
            return true;
        }catch(Exception e){
            return false;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelTypeOrigineFruitSimple = new javax.swing.JPanel();
        labelTypeFruitSimple = new javax.swing.JLabel();
        jComboBoxTypeFruitSimple = new javax.swing.JComboBox<>();
        labelOrigineFruitSimple = new javax.swing.JLabel();
        jComboBoxOrigineFruitSimple = new javax.swing.JComboBox<>();
        panelPrixQteFruitSimple = new javax.swing.JPanel();
        labelPrixFruitSimple = new javax.swing.JLabel();
        jTextFieldPrixFruitSimple = new javax.swing.JTextField();
        labelQteFruitSimple = new javax.swing.JLabel();
        jSpinnerQteFruitSimple = new javax.swing.JSpinner();
        panelBoutonsValiderAnnuler = new javax.swing.JPanel();
        jButtonValiderFruitSimple = new javax.swing.JButton();
        jButtonAnnulerFruitSimple = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        labelTypeFruitSimple.setText("Type du fruit : ");
        panelTypeOrigineFruitSimple.add(labelTypeFruitSimple);

        panelTypeOrigineFruitSimple.add(jComboBoxTypeFruitSimple);

        labelOrigineFruitSimple.setText("Origine du fruit : ");
        panelTypeOrigineFruitSimple.add(labelOrigineFruitSimple);

        panelTypeOrigineFruitSimple.add(jComboBoxOrigineFruitSimple);

        getContentPane().add(panelTypeOrigineFruitSimple, java.awt.BorderLayout.NORTH);

        labelPrixFruitSimple.setText("Prix du fruit : ");
        panelPrixQteFruitSimple.add(labelPrixFruitSimple);

        jTextFieldPrixFruitSimple.setPreferredSize(new java.awt.Dimension(100, 30));
        panelPrixQteFruitSimple.add(jTextFieldPrixFruitSimple);

        labelQteFruitSimple.setText("Quantit√© : ");
        panelPrixQteFruitSimple.add(labelQteFruitSimple);

        jSpinnerQteFruitSimple.setPreferredSize(new java.awt.Dimension(40, 30));
        jSpinnerQteFruitSimple.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerQteFruitSimpleStateChanged(evt);
            }
        });
        panelPrixQteFruitSimple.add(jSpinnerQteFruitSimple);

        getContentPane().add(panelPrixQteFruitSimple, java.awt.BorderLayout.CENTER);

        jButtonValiderFruitSimple.setText("Valider");
        jButtonValiderFruitSimple.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonValiderFruitSimpleActionPerformed(evt);
            }
        });
        panelBoutonsValiderAnnuler.add(jButtonValiderFruitSimple);

        jButtonAnnulerFruitSimple.setText("Annuler");
        jButtonAnnulerFruitSimple.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAnnulerFruitSimpleActionPerformed(evt);
            }
        });
        panelBoutonsValiderAnnuler.add(jButtonAnnulerFruitSimple);

        getContentPane().add(panelBoutonsValiderAnnuler, java.awt.BorderLayout.SOUTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jSpinnerQteFruitSimpleStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerQteFruitSimpleStateChanged
        // TODO add your handling code here:
        this.quantite = (Integer)this.jSpinnerQteFruitSimple.getModel().getValue();
    }//GEN-LAST:event_jSpinnerQteFruitSimpleStateChanged

    private void jButtonValiderFruitSimpleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonValiderFruitSimpleActionPerformed
        // TODO add your handling code here:
        if(this.jTextFieldPrixValide()){
            try{
                for(int i = 0; i < this.quantite; i++){
                    double prix = Double.parseDouble(this.jTextFieldPrixFruitSimple.getText());
                    TypeFruitSimple tfs = (TypeFruitSimple) this.jComboBoxTypeFruitSimple.getSelectedItem();
                    OrigineProduit op = (OrigineProduit) this.jComboBoxOrigineFruitSimple.getSelectedItem();
                    FruitSimple fs = new FruitSimple(prix, op, tfs);
                    this.mVP.getControleur().ajoutProduit(fs);
                }

            }catch(Exception e){
                System.err.println(e);
            }
            this.dispose();
            this.pack();
        }else{
            System.err.println("Vous devez renseigner le prix du fruit correctement !");
        }
    }//GEN-LAST:event_jButtonValiderFruitSimpleActionPerformed

    private void jButtonAnnulerFruitSimpleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAnnulerFruitSimpleActionPerformed
        // TODO add your handling code here:
        this.dispose();
        this.pack();
    }//GEN-LAST:event_jButtonAnnulerFruitSimpleActionPerformed

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAnnulerFruitSimple;
    private javax.swing.JButton jButtonValiderFruitSimple;
    private javax.swing.JComboBox<String> jComboBoxOrigineFruitSimple;
    private javax.swing.JComboBox<String> jComboBoxTypeFruitSimple;
    private javax.swing.JSpinner jSpinnerQteFruitSimple;
    private javax.swing.JTextField jTextFieldPrixFruitSimple;
    private javax.swing.JLabel labelOrigineFruitSimple;
    private javax.swing.JLabel labelPrixFruitSimple;
    private javax.swing.JLabel labelQteFruitSimple;
    private javax.swing.JLabel labelTypeFruitSimple;
    private javax.swing.JPanel panelBoutonsValiderAnnuler;
    private javax.swing.JPanel panelPrixQteFruitSimple;
    private javax.swing.JPanel panelTypeOrigineFruitSimple;
    // End of variables declaration//GEN-END:variables

    public Panier getPanier(){
        return this.mPanier;
    }
    
    public VuePanier getVuePanier(){
        return this.mVP;
    }
    
    public void setPanier(Panier panier){
        this.mPanier = panier;
    }
    
    public void setVuePanier(VuePanier vuePanier){
        this.mVP = vuePanier;
    }
    
    public Controleur getControleur(){
        return this.mControleur;
    }
    
    @Override
    public void addControleur(Controleur c){
        this.mControleur=c;
    }
    
    @Override
    public void update(Observable m, Object o){
        this.mPanier= (Panier)o;
        this.mVP.remplirListe();
    }
}
